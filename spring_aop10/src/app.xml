<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">

	<!-- <bean id="ct" class="kr.co.jhta.app.CheckReloadTime1"></bean> -->
	<!-- <bean id="ct" class="kr.co.jhta.app.CheckReloadTime2"></bean> -->
	<bean id="ct" class="kr.co.jhta.app.CheckReloadTime3"></bean>

	<!-- 1번째 방식 -->
<!-- 	<bean id="w" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target" ref="imple"></property>
		<property name="interceptorNames">
			<list>
				<value>ct</value>
			</list>
		</property>
	</bean> -->

	<!-- 2번째 방식 -->
<!-- 	<aop:config>
		<aop:aspect id="ch" ref="ct">
			<aop:pointcut expression="execution (public * tire(..))" id="ch"/>
			<aop:around method="logAround" pointcut-ref="ch"/>
		</aop:aspect>
	</aop:config> -->

	<bean id="imple" class="kr.co.jhta.app.WeaponImple"></bean>
	<!-- 3번째 방식 -->
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
</beans>
